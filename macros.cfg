[gcode_macro G32]
gcode:
    G90
    BED_MESH_CLEAR
    status_homing
    G28
    status_leveling
    QUAD_GANTRY_LEVEL
    status_homing
    G28
    status_ready
    #G0 X150 Y150 Z30 F3600

[gcode_macro PRE_HEAT]
gcode:
    {% set BED_TEMP = params.BED|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(150)|float %}
    {% set CHAMBER = params.CHAMBER|default(45)|float %}

    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.3
    status_heating
    SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={CHAMBER}
    M104 S{EXTRUDER_TEMP}
    M140 S{BED_TEMP}
    SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(215)|float %}
    {% set CHAMBER = params.CHAMBER|default(0)|float %}
    M107
    status_heating
    SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={CHAMBER}
    M104 S150
    M190 S{BED_TEMP}
    TEMPERATURE_WAIT SENSOR="heater_generic chamber_heater" MINIMUM={CHAMBER}
    # Start bed heating
    G32
    #M104 S{EXTRUDER_TEMP}
    STATUS_MESHING
    BED_MESH_CALIBRATE
    #BED_MESH_PROFILE SAVE=default_s
    status_heating
    M109 S{EXTRUDER_TEMP} ;wait
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.5
    #status_cleaning
    #clean_nozzle
    ADAPTIVE_PURGE
    status_printing
  

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X250 Y250 F3600            ; park nozzle at rear
    #BED_MESH_CLEAR
    SET_FAN_SPEED FAN=bed_fan SPEED=0
    # SET_TEMPERATURE_FAN_TARGET temperature_fan=exhaust_fan TARGET=0
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1
    UPDATE_DELAYED_GCODE ID=stop_exhast_fan DURATION=600
    M84
    status_off

[gcode_macro LON]
gcode:
  SET_PIN PIN=caselight VALUE=1.00

[gcode_macro LOFF]
gcode:
  SET_PIN PIN=caselight VALUE=0.00


[gcode_macro CENTER_PARK]
gcode:
    G91
    G0 Z100
    G90
    G0 X150 Y150 F9999

##      Set RGB values on boot up for each Neopixel. 
##      Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
        status_ready

[delayed_gcode stop_exhast_fan]
gcode:
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
